@inject EsquioState state
@implements IDisposable

<div class="@(state.WindowModalIsActive ? "modal-open" : "")">
    <CascadingAuthenticationState>
        <Router AppAssembly="@typeof(Program).Assembly">
            <Found Context="routeData">
                <RouteStorage>
                    <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                        <NotAuthorized>
                            <RedirectToLogin />
                        </NotAuthorized>
                    </AuthorizeRouteView>
                </RouteStorage>
            </Found>
            <NotFound>
                <LayoutView Layout="@typeof(MainLayout)">
                    <p>Sorry, there's nothing at this address.</p>
                </LayoutView>
            </NotFound>
        </Router>
    </CascadingAuthenticationState>
</div>

@if (state.WindowModalIsActive)
{
    <div class="modal-backdrop fade show"></div>
}

@code {

    protected override void OnInitialized()
    {
        state.OnWindowModalActiveChange += WindowModalActiveChange;
    }

    private void WindowModalActiveChange()
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        state.OnWindowModalActiveChange -= WindowModalActiveChange;
    }
}
